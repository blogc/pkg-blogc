.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "BLOGC\-MAKE" "1" "May 2019" "Rafael G. Martins" "blogc Manual"
.
.SH "NAME"
\fBblogc\-make\fR \- a simple build tool for blogc
.
.SH "SYNOPSIS"
\fBblogc\-make\fR [\fB\-V\fR] [\fB\-f\fR \fIFILE\fR] [\fIRULE\fR \.\.\.]
.
.br
\fBblogc\-make\fR [\fB\-h\fR|\fB\-v\fR]
.
.SH "DESCRIPTION"
\fBblogc\-make\fR is a simple build tool for blogc websites\. It reads a blogcfile(5) and generates the output files using blogc(1) and some predefined rules, that are useful enough for most common use cases\.
.
.P
See blogcfile(5) for details on the file format\.
.
.SH "OPTIONS"
.
.TP
\fB\-D\fR
Builds for development environment\. This option is useful to load local, non\-optimized assets for development purposes\. It adds two global variables to all blogc(1) calls: \fBMAKE_ENV_DEV=1\fR and \fBMAKE_ENV=dev\fR\.
.
.TP
\fB\-V\fR
Activates verbose mode, that will give more details of commands runs\.
.
.TP
\fB\-f\fR \fIFILE\fR
Reads \fIFILE\fR as \fBblogcfile\fR\.
.
.TP
\fB\-v\fR
Show program name, version and exit\.
.
.TP
\fB\-h\fR
Show help message and exit\.
.
.SH "HELPER RULES"
.
.SS "all"
Run all build rules\. This is the default rule\.
.
.SS "clean"
Clean built files and empty directories in output directory\.
.
.SS "runserver"
Run \fBblogc\-runserver(1)\fR (if available) pointing to output directory, watching for changes in the source files and rebuilding as needed\. This rule accepts some arguments, in the following format:
.
.IP "" 4
.
.nf

runserver:host=127\.0\.0\.1,port=8080,threads=20
.
.fi
.
.IP "" 0
.
.P
The values in the example are the default values\. Rebuilds are done by running \fBblogc\-make all\fR internally\.
.
.SS "watch"
Watch for changes in the source files, rebuilding as needed\.
.
.P
Rebuilds are done by running \fBblogc\-make all\fR internally\.
.
.SS "atom_dump"
Dump default Atom feed template based on current blogcfile(5) settings\.
.
.P
The template is dumped to the standard output, and can be used as base for customized Atom feed templates\.
.
.SH "BUILD RULES"
.
.SS "index"
Build website index from posts\.
.
.P
The rule passes the following helper variables to blogc(1):
.
.TP
\fBMAKE_RULE\fR
\fBindex\fR
.
.TP
\fBMAKE_TYPE\fR
\fBpost\fR
.
.SS "atom"
Build main atom feed from posts\.
.
.P
The rule passes the following helper variables to blogc(1):
.
.TP
\fBMAKE_RULE\fR
\fBatom\fR
.
.TP
\fBMAKE_TYPE\fR
\fBatom\fR
.
.SS "atom_tags"
Build atom feeds for each tag from posts\.
.
.P
The rule passes the following helper variables to blogc(1):
.
.TP
\fBMAKE_RULE\fR
\fBatom_tags\fR
.
.TP
\fBMAKE_TYPE\fR
\fBatom\fR
.
.SS "pagination"
Build pagination pages from posts\. This rule is disabled if \fBposts_per_page\fR value in blogcfile(5) is negative or \fB0\fR\.
.
.P
The rule passes the following helper variables to blogc(1):
.
.TP
\fBMAKE_RULE\fR
\fBpagination\fR
.
.TP
\fBMAKE_TYPE\fR
\fBpost\fR
.
.SS "posts"
Build individual pages for each post\.
.
.P
The rule passes the following helper variables to blogc(1):
.
.TP
\fBMAKE_RULE\fR
\fBposts\fR
.
.TP
\fBMAKE_TYPE\fR
\fBpost\fR
.
.TP
\fBMAKE_SLUG\fR
The slug of the post being built, as provided in blogcfile
.
.SS "tags"
Build post listings for each tag from posts\.
.
.P
The rule passes the following helper variables to blogc(1):
.
.TP
\fBMAKE_RULE\fR
\fBtags\fR
.
.TP
\fBMAKE_TYPE\fR
\fBpost\fR
.
.SS "pages"
Build individual pages for each page\.
.
.P
The rule passes the following helper variables to blogc(1):
.
.TP
\fBMAKE_RULE\fR
\fBpages\fR
.
.TP
\fBMAKE_TYPE\fR
\fBpage\fR
.
.TP
\fBMAKE_SLUG\fR
The slug of the page being built, as provided in blogcfile
.
.SS "copy"
Copy static files from source directory to output directory\.
.
.SH "FILES"
The \fBblogc\-make\fR command expects a settings file, called \fBblogcfile\fR by default, or any other file passed to \fB\-f\fR option\. \fBblogcfile\fR must have valid UTF\-8 content\.
.
.P
The \fBblogc\-make\fR command will read any files listed on \fBblogcfile\fR, and may write files to the configured output directory\.
.
.SH "ENVIRONMENT"
.
.TP
\fBBLOGC\fR
Path to \fBblogc(1)\fR binary\. If not provided, the \fBblogc\fR binary in \fB$PATH\fR will be used\.
.
.TP
\fBBLOGC_RUNSERVER\fR
Path to \fBblogc\-runserver(1)\fR binary\. If not provided, the \fBblogc\-runserver\fR binary in \fB$PATH\fR will be used, if available\.
.
.TP
\fBOUTPUT_DIR\fR
Path to the directory where \fBblogc\-make\fR should write (or instruct blogc(1) to write) output files\.
.
.P
Any other environment variables are inherited by blogc(1) and blogc\-runserver(1), when called by \fBblogc\-make\fR\.
.
.SH "EXAMPLES"
Build all files:
.
.IP "" 4
.
.nf

$ blogc\-make
.
.fi
.
.IP "" 0
.
.P
or
.
.IP "" 4
.
.nf

$ blogc\-make all
.
.fi
.
.IP "" 0
.
.P
Clean built files:
.
.IP "" 4
.
.nf

$ blogc\-make clean
.
.fi
.
.IP "" 0
.
.SH "BUGS"
Please report any issues to: \fIhttps://github\.com/blogc/blogc\fR
.
.SH "AUTHOR"
Rafael G\. Martins <\fIrafael@rafaelmartins\.eng\.br\fR>
.
.SH "SEE ALSO"
blogc(1), blogc\-runserver(1), blogcfile(5)
